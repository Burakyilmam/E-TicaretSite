@using Entity.Entities
@model List<Product>
@{
    ViewData["Title"] = "ProductPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .col-12 span a {
        color: darkorange;
        text-decoration: none;
    }
</style>
<div class="container-fluid">
    @foreach (var item in Model)
    {
        <div class="col-12 bg-light" style="height:50px;display:flex;align-items:center;">
            <b>
                <a style="text-decoration:none;color:black;" href="/Home/HomePage/">Ana Sayfa</a>
                <span style="opacity:0.5;font-size:10px;color:black;">
                    <i class="fa fa-chevron-right"></i>
                </span>
                <a style="text-decoration:none;color:black;" href="/Home/HomePage/">@item.Category.MainCategory.MainCategoryName</a>
                <span style="opacity:0.5;font-size:10px;color:black;">
                    <i class="fa fa-chevron-right"></i>
                </span>
                <a style="text-decoration:none;color:black;" href="/Product/ListCategoryProduct/@item.CategoryId">@item.Category.Name</a>
            </b>
        </div>
        <div class="row">
            <div class="col-md-6 col-lg-4">
                @await Component.InvokeAsync("ListProductImages",new {id=ViewBag.Id})
            </div>
            <div class="col-md-6 col-lg-8 bg-dark text-white pt-3">
                <div class="col-12">
                    @item.Name
                </div>
                <div class="col-12">
                    <a style="text-decoration:none;color:White;" href="/Product/ListBrandProduct/@item.BrandId/">
                        <b>@item.Brand.Name</b>
                    </a>
                </div>                
                    @if (item.Discount == 0)
                    {
                        <div class="col-12"><b>@item.Price.ToString("0")</b> ₺</div>
                    }
                    @if (item.Discount > 0)
                    {
                        <div class="col-12">
                            <span style="text-decoration:line-through;opacity: 0.85;">@item.Price.ToString("0") ₺</span>
                            <b class="text-success">%@item.Discount.ToString("0")</b>
                        </div>
                        var discountedPrice =
                        item.Price - (item.Price * @item.Discount) / 100;
                        <div class="col-12 text-danger">
                            <b>
                                @discountedPrice.ToString("0")
                            </b> ₺
                        </div>

                    }
            </div>
        </div>


        @await Component.InvokeAsync("ListComment",new {id=ViewBag.Id})
        <br />
        @if (User.Identity.IsAuthenticated)
        {
            @await Html.PartialAsync("~/Views/Comment/CommentAdd.cshtml")
        }
        else
        {
            <div class="col-12">
                <p class="bg-secondary text-white p-3" style="border-radius:10px;">
                    Sadece kayıtlı üyeler yorum yapabilir.Yorum Yapabilmeniz için üye girişi yapmanız gerekmektedir.Eğer üye değilseniz yan tarafta bulunan kayıt ol butonu ile üye olabilirsiniz.
                    <a class="btn-light m-2" style="padding:10px;border-radius:10px" href="/User/ProductUserLogin/@item.Id">
                        Giriş Yap
                    </a>
                    <a class="btn-danger" style="padding:10px;border-radius:10px" href="/User/UserRegister/">
                        Üye Ol
                    </a>
                </p>
            </div>
        }
        <div class="col-12" style="display:flex;justify-content:center;margin-left:-25px">
            <h2>
                @item.Category.Name <span style="font-size:16px;">
                    <a href="/Product/ListCategoryProduct/@item.CategoryId">Tümünü Göster</a>
                </span>
            </h2>
        </div>
        @await Component.InvokeAsync("ListSimilarCategory",new {id = item.CategoryId})
        <div class="col-12" style="display:flex;justify-content:center;margin-left:-25px">
            <h2>
                @item.Brand.Name <span style="font-size:16px;">
                    <a href="/Product/ListBrandProduct/@item.BrandId">Tümünü Göster</a>
                </span>
            </h2>
        </div>
        @await Component.InvokeAsync("ListBrandProducts",new {id = item.BrandId})
        <div class="col-12" style="display:flex;justify-content:center;margin-left:-25px">
            <h2>
                @item.Category.MainCategory.MainCategoryName <span style="font-size:16px;">
                    <a href="/Product/ListMainCategoryProduct/1">Tümünü Göster</a>
                </span>
            </h2>
        </div>
        @await Component.InvokeAsync("MainCategoryProducts",new {id = item.Category.MainCategoryId})

    }
</div>
<script>
    let slideIndex = 1;
    showSlides(slideIndex);

    // Next/previous controls
    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    // Thumbnail image controls
    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        let i;
        let slides = document.getElementsByClassName("mySlides");
        let dots = document.getElementsByClassName("demo");
        let captionText = document.getElementById("caption");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";
        captionText.innerHTML = dots[slideIndex - 1].alt;
    }
</script>